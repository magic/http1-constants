/**
 * HTTP/1.1 Constants
 * Comprehensive constants for HTTP/1.1 protocol
 */

export const status = /** @type {const} */ ({
  // 1xx Informational
  CONTINUE: 100,
  SWITCHING_PROTOCOLS: 101,
  PROCESSING: 102,
  EARLY_HINTS: 103,

  // 2xx Success
  OK: 200,
  CREATED: 201,
  ACCEPTED: 202,
  NON_AUTHORITATIVE_INFORMATION: 203,
  NO_CONTENT: 204,
  RESET_CONTENT: 205,
  PARTIAL_CONTENT: 206,
  MULTI_STATUS: 207,
  ALREADY_REPORTED: 208,
  IM_USED: 226,

  // 3xx Redirection
  MULTIPLE_CHOICES: 300,
  MOVED_PERMANENTLY: 301,
  FOUND: 302,
  SEE_OTHER: 303,
  NOT_MODIFIED: 304,
  USE_PROXY: 305,
  TEMPORARY_REDIRECT: 307,
  PERMANENT_REDIRECT: 308,

  // 4xx Client Errors
  BAD_REQUEST: 400,
  UNAUTHORIZED: 401,
  PAYMENT_REQUIRED: 402,
  FORBIDDEN: 403,
  NOT_FOUND: 404,
  METHOD_NOT_ALLOWED: 405,
  NOT_ACCEPTABLE: 406,
  PROXY_AUTHENTICATION_REQUIRED: 407,
  REQUEST_TIMEOUT: 408,
  CONFLICT: 409,
  GONE: 410,
  LENGTH_REQUIRED: 411,
  PRECONDITION_FAILED: 412,
  PAYLOAD_TOO_LARGE: 413,
  URI_TOO_LONG: 414,
  UNSUPPORTED_MEDIA_TYPE: 415,
  RANGE_NOT_SATISFIABLE: 416,
  EXPECTATION_FAILED: 417,
  IM_A_TEAPOT: 418,
  MISDIRECTED_REQUEST: 421,
  UNPROCESSABLE_ENTITY: 422,
  LOCKED: 423,
  FAILED_DEPENDENCY: 424,
  TOO_EARLY: 425,
  UPGRADE_REQUIRED: 426,
  PRECONDITION_REQUIRED: 428,
  TOO_MANY_REQUESTS: 429,
  REQUEST_HEADER_FIELDS_TOO_LARGE: 431,
  UNAVAILABLE_FOR_LEGAL_REASONS: 451,

  // NON standard, used by nginx.
  CLIENT_CLOSED_REQUEST: 499,

  // 5xx Server Errors
  INTERNAL_SERVER_ERROR: 500,
  NOT_IMPLEMENTED: 501,
  BAD_GATEWAY: 502,
  SERVICE_UNAVAILABLE: 503,
  GATEWAY_TIMEOUT: 504,
  HTTP_VERSION_NOT_SUPPORTED: 505,
  VARIANT_ALSO_NEGOTIATES: 506,
  INSUFFICIENT_STORAGE: 507,
  LOOP_DETECTED: 508,
  NOT_EXTENDED: 510,
  NETWORK_AUTHENTICATION_REQUIRED: 511,
})

export const methods = /** @type {const} */ ({
  GET: 'GET',
  POST: 'POST',
  PUT: 'PUT',
  DELETE: 'DELETE',
  PATCH: 'PATCH',
  HEAD: 'HEAD',
  OPTIONS: 'OPTIONS',
  CONNECT: 'CONNECT',
  TRACE: 'TRACE',
})

export const headers = /** @type {const} */ ({
  // Request Headers
  ACCEPT: 'Accept',
  ACCEPT_CHARSET: 'Accept-Charset',
  ACCEPT_DATETIME: 'Accept-Datetime',
  ACCEPT_ENCODING: 'Accept-Encoding',
  ACCEPT_LANGUAGE: 'Accept-Language',
  AUTHORIZATION: 'Authorization',
  CACHE_CONTROL: 'Cache-Control',
  CONNECTION: 'Connection',
  CONTENT_LENGTH: 'Content-Length',
  CONTENT_MD5: 'Content-MD5',
  CONTENT_TYPE: 'Content-Type',
  COOKIE: 'Cookie',
  DATE: 'Date',
  EXPECT: 'Expect',
  FORWARDED: 'Forwarded',
  FROM: 'From',
  HOST: 'Host',
  IF_MATCH: 'If-Match',
  IF_MODIFIED_SINCE: 'If-Modified-Since',
  IF_NONE_MATCH: 'If-None-Match',
  IF_RANGE: 'If-Range',
  IF_UNMODIFIED_SINCE: 'If-Unmodified-Since',
  MAX_FORWARDS: 'Max-Forwards',
  ORIGIN: 'Origin',
  PRAGMA: 'Pragma',
  PROXY_AUTHORIZATION: 'Proxy-Authorization',
  RANGE: 'Range',
  REFERER: 'Referer',
  TE: 'TE',
  TRANSFER_ENCODING: 'Transfer-Encoding',
  UPGRADE: 'Upgrade',
  USER_AGENT: 'User-Agent',
  VIA: 'Via',
  WARNING: 'Warning',

  // Response Headers
  ACCEPT_PATCH: 'Accept-Patch',
  ACCEPT_RANGES: 'Accept-Ranges',
  ACCESS_CONTROL_ALLOW_CREDENTIALS: 'Access-Control-Allow-Credentials',
  ACCESS_CONTROL_ALLOW_HEADERS: 'Access-Control-Allow-Headers',
  ACCESS_CONTROL_ALLOW_METHODS: 'Access-Control-Allow-Methods',
  ACCESS_CONTROL_ALLOW_ORIGIN: 'Access-Control-Allow-Origin',
  ACCESS_CONTROL_EXPOSE_HEADERS: 'Access-Control-Expose-Headers',
  ACCESS_CONTROL_MAX_AGE: 'Access-Control-Max-Age',
  AGE: 'Age',
  ALLOW: 'Allow',
  ALT_SVC: 'Alt-Svc',
  CONTENT_DISPOSITION: 'Content-Disposition',
  CONTENT_ENCODING: 'Content-Encoding',
  CONTENT_LANGUAGE: 'Content-Language',
  CONTENT_LOCATION: 'Content-Location',
  CONTENT_RANGE: 'Content-Range',
  DELTA_BASE: 'Delta-Base',
  ETAG: 'ETag',
  EXPIRES: 'Expires',
  IM: 'IM',
  LAST_MODIFIED: 'Last-Modified',
  LINK: 'Link',
  LOCATION: 'Location',
  P3P: 'P3P',
  PROXY_AUTHENTICATE: 'Proxy-Authenticate',
  PUBLIC_KEY_PINS: 'Public-Key-Pins',
  RETRY_AFTER: 'Retry-After',
  SERVER: 'Server',
  SET_COOKIE: 'Set-Cookie',
  STRICT_TRANSPORT_SECURITY: 'Strict-Transport-Security',
  TRAILER: 'Trailer',
  VARY: 'Vary',
  WWW_AUTHENTICATE: 'WWW-Authenticate',
  X_FRAME_OPTIONS: 'X-Frame-Options',

  // Common Non-Standard Headers
  DNT: 'DNT',
  FRONT_END_HTTPS: 'Front-End-Https',
  PROXY_CONNECTION: 'Proxy-Connection',
  SAVE_DATA: 'Save-Data',
  X_ATT_DEVICEID: 'X-ATT-DeviceId',
  X_CORRELATION_ID: 'X-Correlation-ID',
  X_CSRF_TOKEN: 'X-CSRF-Token',
  X_FORWARDED_FOR: 'X-Forwarded-For',
  X_FORWARDED_HOST: 'X-Forwarded-Host',
  X_FORWARDED_PROTO: 'X-Forwarded-Proto',
  X_HTTP_METHOD_OVERRIDE: 'X-HTTP-Method-Override',
  X_REQUESTED_WITH: 'X-Requested-With',
  X_REQUEST_ID: 'X-Request-ID',
  X_UIDH: 'X-UIDH',
  X_WAP_PROFILE: 'X-Wap-Profile',

  // Security Headers
  CONTENT_SECURITY_POLICY: 'Content-Security-Policy',
  CONTENT_SECURITY_POLICY_REPORT_ONLY: 'Content-Security-Policy-Report-Only',
  FEATURE_POLICY: 'Feature-Policy',
  PERMISSIONS_POLICY: 'Permissions-Policy',
  REFERRER_POLICY: 'Referrer-Policy',
  X_CONTENT_TYPE_OPTIONS: 'X-Content-Type-Options',
  X_XSS_PROTECTION: 'X-XSS-Protection',

  // Modern Security & Privacy Headers
  CROSS_ORIGIN_EMBEDDER_POLICY: 'Cross-Origin-Embedder-Policy',
  CROSS_ORIGIN_OPENER_POLICY: 'Cross-Origin-Opener-Policy',
  CROSS_ORIGIN_RESOURCE_POLICY: 'Cross-Origin-Resource-Policy',
  EXPECT_CT: 'Expect-CT',
  ORIGIN_AGENT_CLUSTER: 'Origin-Agent-Cluster',
  REPORT_TO: 'Report-To',
  REPORTING_ENDPOINTS: 'Reporting-Endpoints',

  // Client Hints
  ACCEPT_CH: 'Accept-CH',
  ACCEPT_CH_LIFETIME: 'Accept-CH-Lifetime',
  CRITICAL_CH: 'Critical-CH',
  DEVICE_MEMORY: 'Device-Memory',
  DOWNLINK: 'Downlink',
  DPR: 'DPR',
  ECT: 'ECT',
  RTT: 'RTT',
  VIEWPORT_WIDTH: 'Viewport-Width',
  WIDTH: 'Width',

  // Resource Timing and Networking
  EARLY_DATA: 'Early-Data',
  PRIORITY: 'Priority',
  TIMING_ALLOW_ORIGIN: 'Timing-Allow-Origin',
})

// Combined export
export const constants = /** @type {const} */ ({
  status,
  methods,
  headers,
})

export default constants
